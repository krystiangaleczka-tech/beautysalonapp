# Generated by Django 5.2 on 2025-08-31 14:26

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("clients", "0001_mvp_client_model"),
    ]

    operations = [
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date and time when the record was created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date and time when the record was last updated",
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if the record is soft deleted",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date and time when the record was soft deleted",
                        null=True,
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("sms", "SMS"),
                            ("push", "Push Notification"),
                            ("in_app", "In-App Notification"),
                        ],
                        help_text="Type of notification",
                        max_length=10,
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        blank=True,
                        help_text="Notification subject (for email)",
                        max_length=200,
                    ),
                ),
                ("message", models.TextField(help_text="Notification message content")),
                (
                    "delivery_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("sent", "Sent"),
                            ("delivered", "Delivered"),
                            ("failed", "Failed"),
                            ("read", "Read"),
                        ],
                        default="pending",
                        help_text="Current delivery status of the notification",
                        max_length=15,
                    ),
                ),
                (
                    "sent_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the notification was sent",
                        null=True,
                    ),
                ),
                (
                    "delivered_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the notification was delivered",
                        null=True,
                    ),
                ),
                (
                    "read_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the notification was read",
                        null=True,
                    ),
                ),
                (
                    "template_name",
                    models.CharField(
                        blank=True,
                        help_text="Template used for this notification",
                        max_length=100,
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional metadata for the notification",
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True, help_text="Error message if delivery failed"
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        help_text="Client to receive this notification",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="clients.client",
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification",
                "verbose_name_plural": "Notifications",
                "db_table": "notifications",
                "ordering": ["-created_at"],
                "abstract": False,
                "indexes": [
                    models.Index(
                        fields=["client"], name="notificatio_client__6a264a_idx"
                    ),
                    models.Index(
                        fields=["notification_type"],
                        name="notificatio_notific_19df93_idx",
                    ),
                    models.Index(
                        fields=["delivery_status"],
                        name="notificatio_deliver_3684d5_idx",
                    ),
                    models.Index(
                        fields=["created_at"], name="notificatio_created_e4c995_idx"
                    ),
                ],
            },
        ),
    ]
